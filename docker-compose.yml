version: '3.1'
services:
  mongo:
    image: mongo
    container_name: "mongodb"
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
      - ./script/mongo/:/docker-entrypoint-initdb.d/
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_ROOT_USER=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASS=${MONGO_ROOT_PASSWORD}
      - APP_MONGO_USER=${APP_MONGO_USER}
      - APP_MONGO_PASS=${APP_MONGO_PASS}
      - APP_MONGO_DB=${APP_MONGO_DB}
  biasimpacter:
    env_file: .env
    container_name: biasimpacter
    build:
      context: ./biasimpacter
    depends_on: 
      - mongo
    volumes:
      - .:/biasimpacter
    user: root
    entrypoint: sh /biasimpacter/biasimpacter/crontab.sh

prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: unless-stopped
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
    expose:
      - 9090
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

node-exporter:
  image: prom/node-exporter:latest
  container_name: monitoring_node_exporter
  restart: unless-stopped
  expose:
    - 9100

cadvisor:
  image: google/cadvisor:latest
  container_name: monitoring_cadvisor
  restart: unless-stopped
  volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
  expose:
    - 8080

grafana:
  env_file: .env
  image: grafana/grafana:latest
  container_name: monitoring_grafana
  restart: unless-stopped
  links:
    - prometheus:prometheus
  volumes:
    - ./data/grafana:/var/lib/grafana
    